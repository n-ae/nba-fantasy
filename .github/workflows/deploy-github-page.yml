# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - "frontend/**"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Trunk
        uses: jetli/trunk-action@v0.2.0
      - name: Install Rust Target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
      - name: Set Build Environment
        run: |
          cd frontend
          touch .env
          echo YAHOO_OAUTH_CLIENT_ID=${{ env.YAHOO_OAUTH_CLIENT_ID }} >> .env
          echo YAHOO_OAUTH_TOKEN_URL=${{ env.YAHOO_OAUTH_TOKEN_URL }} >> .env
          echo CORS_REVERSE_PROXY_ENDPOINT=${{ env.CORS_REVERSE_PROXY_ENDPOINT }} >> .env
      - name: Build release
        run: |
          cd frontend
          # trunk build --public-url /nba-fantasy --release
          # dynamic equivalent
          trunk build --public-url /${GITHUB_REPOSITORY#*/} --release
        shell: sh
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "./frontend/dist"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
